// <auto-generated> - Template:AutoMapperProfile, Version:2021.9.14, Id:7b0aa8de-d2fb-4efa-98e1-75feb116a153
using AutoMapper;
using xDTO = ArtistSite.Shared.DTO;
using xENT = ArtistSite.Repository.Entities;

namespace ArtistSite.Repository.Mappers
{
public partial class ASAutoMapperProfile : Profile
{
		public ASAutoMapperProfile()
		{
			InitializeProfile();
			InitializePartial();
		}

		partial void InitializePartial();

		private void InitializeProfile()
		{
				CreateMap<xDTO.Artist, xENT.Artist>()
					.ForMember(x => x.Artworks, opt => opt.Ignore())
					.ForMember(x => x.Categories, opt => opt.Ignore())
					.ReverseMap()
					.PreserveReferences();

				CreateMap<xDTO.Artwork, xENT.Artwork>()
					.ForMember(x => x.Artist, opt => opt.Ignore())
					.ReverseMap()
					.PreserveReferences();

				CreateMap<xDTO.ArtworkCategoryXref, xENT.ArtworkCategoryXref>()
					.ReverseMap()
					.PreserveReferences();

				CreateMap<xDTO.ArtworkMediumXref, xENT.ArtworkMediumXref>()
					.ReverseMap()
					.PreserveReferences();

				CreateMap<xDTO.Category, xENT.Category>()
					.ForMember(x => x.Artist, opt => opt.Ignore())
					.ForMember(x => x.InverseParentCategory, opt => opt.Ignore())
					.ForMember(x => x.ParentCategory, opt => opt.Ignore())
					.ReverseMap()
					.PreserveReferences();

				CreateMap<xDTO.Medium, xENT.Medium>()
					.ReverseMap()
					.PreserveReferences();

				CreateMap<xDTO.NewsItem, xENT.NewsItem>()
					.ReverseMap()
					.PreserveReferences();

		}

	}
}
