// <auto-generated> - Template:RepositoryCrudInterface, Version:2021.9.14, Id:5a7fe640-915d-4b08-ba8a-a82c33d69d09
using ArtistSiteAAD.Repository.Entities;
using Enums = ArtistSiteAAD.Shared.Constants.Enums;
using System.Linq;
using ArtistSiteAAD.Repository.Infrastructure;

namespace ArtistSiteAAD.Repository.Repositories
{
	public interface IASRepositoryCrud : 
		ICRUDOperation<Artist>,
		ICRUDOperation<Artwork>,
		ICRUDOperation<ArtworkCategoryXref>,
		ICRUDOperation<ArtworkMediumXref>,
		ICRUDOperation<Category>,
		ICRUDOperation<Medium>,
		ICRUDOperation<NewsItem>
	{
		IQueryable<Artist> GetQueryable_Artist(
			Enums.RelatedEntitiesType relatedEntitiesType = Enums.RelatedEntitiesType.None);
		IQueryable<Artwork> GetQueryable_Artwork(
			Enums.RelatedEntitiesType relatedEntitiesType = Enums.RelatedEntitiesType.None);
		IQueryable<ArtworkCategoryXref> GetQueryable_ArtworkCategoryXref(
			Enums.RelatedEntitiesType relatedEntitiesType = Enums.RelatedEntitiesType.None);
		IQueryable<ArtworkMediumXref> GetQueryable_ArtworkMediumXref(
			Enums.RelatedEntitiesType relatedEntitiesType = Enums.RelatedEntitiesType.None);
		IQueryable<Category> GetQueryable_Category(
			Enums.RelatedEntitiesType relatedEntitiesType = Enums.RelatedEntitiesType.None);
		IQueryable<Medium> GetQueryable_Medium(
			Enums.RelatedEntitiesType relatedEntitiesType = Enums.RelatedEntitiesType.None);
		IQueryable<NewsItem> GetQueryable_NewsItem(
			Enums.RelatedEntitiesType relatedEntitiesType = Enums.RelatedEntitiesType.None);
	}
}
